name: NodeJS CI

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]
          
jobs:
  build:
    runs-on: self-hosted
    
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
          
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: create env file
        run: |
          touch .env
          echo NODE_ENV=development >> .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} >> .env
          echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> .env
          echo AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }} >> .env
          echo STORAGE_TYPE=${{ secrets.STORAGE_TYPE }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo ACCESS_TOKEN_EXPIRES_IN=7d >> .env
          echo REFRESH_TOKEN_EXPIRES_IN=24h >> .env
          echo RESET_TOKEN_EXPIRES_IN=1h >> .env
          echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo DB_USER=${{ secrets.DB_USER }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PASS=${{ secrets.DB_PASS }} >> .env
          
      - name: Build docker
        run: docker-compose build
        
      - name: Docker up
        run: docker-compose up -d
